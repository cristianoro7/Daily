package desperado.com.daily.data.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import desperado.com.daily.data.bean.NewsExtraBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "NEWS_EXTRA_BEAN".
*/
public class NewsExtraBeanDao extends AbstractDao<NewsExtraBean, Void> {

    public static final String TABLENAME = "NEWS_EXTRA_BEAN";

    /**
     * Properties of entity NewsExtraBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Long_comments = new Property(0, int.class, "long_comments", false, "longComments");
        public final static Property Popularity = new Property(1, int.class, "popularity", false, "popularity");
        public final static Property Short_comments = new Property(2, int.class, "short_comments", false, "shortComments");
        public final static Property Comments = new Property(3, int.class, "comments", false, "comments");
    }


    public NewsExtraBeanDao(DaoConfig config) {
        super(config);
    }
    
    public NewsExtraBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"NEWS_EXTRA_BEAN\" (" + //
                "\"longComments\" INTEGER NOT NULL ," + // 0: long_comments
                "\"popularity\" INTEGER NOT NULL ," + // 1: popularity
                "\"shortComments\" INTEGER NOT NULL ," + // 2: short_comments
                "\"comments\" INTEGER NOT NULL );"); // 3: comments
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"NEWS_EXTRA_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, NewsExtraBean entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getLong_comments());
        stmt.bindLong(2, entity.getPopularity());
        stmt.bindLong(3, entity.getShort_comments());
        stmt.bindLong(4, entity.getComments());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, NewsExtraBean entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getLong_comments());
        stmt.bindLong(2, entity.getPopularity());
        stmt.bindLong(3, entity.getShort_comments());
        stmt.bindLong(4, entity.getComments());
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public NewsExtraBean readEntity(Cursor cursor, int offset) {
        NewsExtraBean entity = new NewsExtraBean( //
            cursor.getInt(offset + 0), // long_comments
            cursor.getInt(offset + 1), // popularity
            cursor.getInt(offset + 2), // short_comments
            cursor.getInt(offset + 3) // comments
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, NewsExtraBean entity, int offset) {
        entity.setLong_comments(cursor.getInt(offset + 0));
        entity.setPopularity(cursor.getInt(offset + 1));
        entity.setShort_comments(cursor.getInt(offset + 2));
        entity.setComments(cursor.getInt(offset + 3));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(NewsExtraBean entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(NewsExtraBean entity) {
        return null;
    }

    @Override
    public boolean hasKey(NewsExtraBean entity) {
        // TODO
        return false;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
